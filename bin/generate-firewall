#!/usr/bin/php
<?php
/**
 * Copyright 2015 FranÃ§ois Kooman <fkooman@tuxed.net>.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
require_once dirname(__DIR__).'/vendor/autoload.php';

use fkooman\Config\Reader;
use fkooman\Config\YamlFile;
use fkooman\VPN\Server\Utils;
use fkooman\VPN\Server\Firewall;

function showHelp(array $argv)
{
    $helpText = sprintf('SYNTAX: %s [--nat] [--install] interface', $argv[0]);
    $helpText .= PHP_EOL;
    $helpText .= '--nat      use IP masquerading for NAT'.PHP_EOL;
    $helpText .= '--install  install the firewall script'.PHP_EOL;
    $helpText .= 'interface  the external interface of the machine'.PHP_EOL;
    echo $helpText;
}

try {
    $useNat = false;
    $extIf = null;
    $installFw = false;

    for ($i = 1; $i < $argc; ++$i) {
        if ('--nat' === $argv[$i]) {
            $useNat = true;
        } elseif ('--install' === $argv[$i]) {
            $installFw = true;
        } else {
            $extIf = $argv[$i];
        }
    }

    if (null === $extIf) {
        showHelp($argv);
        throw new Exception('missing interface');
    }

    // read configuration
    $ipConfig = new Reader(
        new YamlFile(dirname(__DIR__).'/config/ip.yaml')
    );

    // get the pools
    $ipPools = $ipConfig->v('v4', 'pools');
    $range6 = $ipConfig->v('v6', 'prefix');

    $f4 = new Firewall(4, $extIf, $useNat);
    $f4->addInputPorts(['tcp/22', 'tcp/80', 'tcp/443', 'udp/1194']);
    $f6 = new Firewall(6, $extIf, $useNat);
    $f6->addInputPorts(['tcp/22', 'tcp/80', 'tcp/443', 'udp/1194']);

    foreach ($ipPools as $poolId => $ipPool) {
        $poolId = sprintf('vpn_%s', $poolId);
        $srcNet = $ipPool['range'];
        $srcNet6 = Utils::convert4to6($range6, $srcNet);

        if (!array_key_exists('firewall', $ipPool) || !array_key_exists('dst_net', $ipPool['firewall'])) {
            $ipPool['firewall']['dst_net'] = ['0.0.0.0/0', '::/0'];
        }

        if (!array_key_exists('dst_port', $ipPool['firewall'])) {
            $ipPool['firewall']['dst_port'] = [];
        }

        $f4->addPool($poolId, $srcNet, $ipPool['firewall']['dst_net'], $ipPool['firewall']['dst_port']);
        $f6->addPool($poolId, $srcNet6, $ipPool['firewall']['dst_net'], $ipPool['firewall']['dst_port']);
    }

    if ($installFw) {
        if (false === @file_put_contents('/etc/sysconfig/iptables', $f4->getFirewall())) {
            throw new Exception('unable to write /etc/sysconfig/iptables');
        }

        if (false === @file_put_contents('/etc/sysconfig/ip6tables', $f6->getFirewall())) {
            throw new Exception('unable to write /etc/sysconfig/ip6tables');
        }
    } else {
        echo '##########################################'.PHP_EOL;
        echo '# IPv4'.PHP_EOL;
        echo '##########################################'.PHP_EOL;
        echo $f4->getFirewall();

        echo '##########################################'.PHP_EOL;
        echo '# IPv6'.PHP_EOL;
        echo '##########################################'.PHP_EOL;
        echo $f6->getFirewall();
    }
} catch (Exception $e) {
    echo sprintf('ERROR: %s', $e->getMessage()).PHP_EOL;
    exit(1);
}
