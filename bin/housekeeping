#!/usr/bin/php
<?php
/**
 * Copyright 2016 FranÃ§ois Kooman <fkooman@tuxed.net>.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
require_once dirname(__DIR__).'/vendor/autoload.php';

use fkooman\VPN\Server\OtpLog;
use fkooman\Config\Reader;
use fkooman\Config\YamlFile;

function cleanupOtp($dbPath)
{
    $db = new PDO($dbPath);
    $otpLog = new OtpLog($db);
    // remove all OTP key entries that are older than 5 minutes
    $otpLog->housekeeping(strtotime('now -5 minutes'));
}

try {
    $configReader = new Reader(
        new YamlFile(dirname(__DIR__).'/config/config.yaml')
    );
    $vpnDataDir = $configReader->v('vpnDataDir');

    if ($configReader->v('multiInstance', false, false)) {
        // find all instances
        $pattern = sprintf('%s/config/*', dirname(__DIR__));

        foreach (glob($pattern, GLOB_ONLYDIR) as $instanceId) {
            $instanceId = basename($instanceId);
            $dbPath = sprintf('sqlite://%s/%s/otp.sqlite', $vpnDataDir, $instanceId);
            cleanupOtp($dbPath);
        }
    } else {
        $dbPath = sprintf('sqlite://%s/otp.sqlite', $vpnDataDir);
        cleanupOtp($dbPath);
    }
} catch (Exception $e) {
    echo sprintf('ERROR: %s', $e->getMessage()).PHP_EOL;
    exit(1);
}
