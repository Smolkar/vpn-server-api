#!/usr/bin/php
<?php
/**
 * Copyright 2015 FranÃ§ois Kooman <fkooman@tuxed.net>.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
require_once dirname(__DIR__).'/vendor/autoload.php';

use Otp\Otp;
use Base32\Base32;
use fkooman\VPN\Server\InputValidation;
use fkooman\Config\Reader;
use fkooman\Config\YamlFile;
use fkooman\VPN\Server\Config\FileConfigStorage;

openlog(
    basename($argv[0]),
    LOG_PERROR,
    LOG_USER
);

# XXX --script-security has to be 3 in order to work with environment stuff 
# (via-env), we could probably use a file 

try {
    $envData = [];
    $envKeys = [
        'common_name',
        'username',
        'password',
    ];

    // read environment variables
    foreach ($envKeys as $envKey) {
        $envValue = getenv($envKey);
        if (empty($envValue)) {
            throw new RuntimeException(sprintf('environment variable "%s" is not set', $envKey));
        }
        $envData[$envKey] = $envValue;
    }

    // for now we ignore the "username" field, either we require it to be
    // the same as the CN, or maybe allow it to indicate the OTP method used, 
    // e.g. 'totp|hotp|yubi'

    $otpKey = $envData['password'];
    // validate the OTP key
    InputValidation::otpKey($otpKey);

    $commonName = $envData['common_name'];
    $userId = substr($commonName, 0, strpos($commonName, '_'));

    // obtain the OTP secret from the CN's configuration
    $ipConfig = new Reader(
        new YamlFile(dirname(__DIR__).'/config/ip.yaml')
    );
    $configStorage = new FileConfigStorage($ipConfig->v('configDir'));
    $userConfig = $configStorage->getUserConfig($userId);

    $otpSecret = $userConfig->getOtpSecret();
    if (false === $otpSecret) {
        throw new RuntimeException(sprintf('no OTP secret for user "%s" registered', $userId));
    }

    $otp = new Otp();
    if ($otp->checkTotp(Base32::decode($otpSecret), $otpKey)) {
        // XXX make sure key was not used before

        syslog(LOG_INFO, sprintf('OTP for user "%s" valid', $userId));
        exit(0);
    } else {
        throw new RuntimeException(sprintf('unexpected OTP key from user "%s"', $userId));
    }
} catch (Exception $e) {
    syslog(LOG_ERR, $e->getMessage());
    exit(66);
}
